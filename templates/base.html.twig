{#{% set sidebar %}#}
{#    {{ knp_menu_render('sidebar_menu') }}#}
{#{% endset %}#}
{% set sidebar %}
{{ knp_menu_render('sidebar_menu', {'allow_safe_labels': true, 'currentClass': 'uk-active'}) }}
{% endset %}
<!DOCTYPE html>
<html lang="pl-PL">
<head>
    <meta charset="UTF-8">
    <title>
        {% block title %}
            {{ title|spaceless }}
        {% endblock -%}
    </title>
    {% block stylesheets %}
        <link rel="stylesheet" href="{{ asset('css/uikit.min.css') }}">
        <link rel="stylesheet" href="{{ asset('css/fontawesome.min.css') }}">
        <link href="https://fonts.googleapis.com/css?family=Poppins:400,600|Roboto:400,700&display=swap"
              rel="stylesheet">
        <style>
            body, .sidebar-wrapper {
                min-height: 100vh;
            }

            .sidebar-wrapper {
                width: 250px !important
            }
        </style>
    {% endblock %}
    {% block javascripts_header %}
        <script src="{{ asset('js/uikit.js') }}"></script>
    {% endblock %}
</head>
<body>

{% block body %}
    <div class="uk-section-large uk-padding-remove uk-grid" data-uk-grid>
        {% block sidebar %}
            <div class="uk-flex-left sidebar-wrapper uk-width-1-7@m uk-flex-first uk-visible@m uk-background-secondary">

                <div class="sidebar uk-padding-small">
{{ sidebar }}
{#                    {{ knp_menu_render('sidebar_menu') }}#}
                </div>
            </div>
        {% endblock %}
        <div class="uk-width-expand@m ">
            {% block content %}

            {% endblock %}
        </div>
    </div>
    </div>
    {% block javascripts_body_bottom %}
        <script>
            let lifoo = document.querySelectorAll('.uk-parent > a');


           // let duap = document.querySelector('.uk-parent > a:before').classList;
           //  console.log(duap);
            // var  fooEls = lifoo[0].querySelector(":scope > .uk-parent'");

            // console.log(fooEls);
         // item= li.querySelectorAll(":scope > .uk-nav-sub");
         //    console.log(lifoo);

            //
            // var color = window.getComputedStyle(
            //     document.querySelector('.uk-parent'), ':before'
            // );

            // let yyy = window.getComputedStyle(
            //     document.querySelector('.uk-parent '), ':after');
            //
            // console.log(color);
            //
            // color.addEventListener('mousedown', function(){
            //     console.log('mousedown');
            // }


            // var color = window.getComputedStyle(
            //     document.querySelector('.uk-parent'), ':before'
            // );
            // console.log(color);

            // color.addEventListener('mousedown', function(){
            //     console.log('mousedown');
            // });


            // var link = document.getElementsByClassName('uk-parent');
            // link.addEventListener('mousedown', event => {
            //     // mouse button pressed
            //     console.log(event.button) //0=left, 2=right
            // })

           let dupa = document.querySelectorAll("a > button.show-parent");
            //
            // var el = document.getElementById('div-03');

            var r1 = dupa[0].closest(".uk-nav-sub");

            console.log(dupa)
            // // console.log(dupa);
            // dupa[0].addEventListener("click", displayDate);
            // //
            // function displayDate() {
            //
            //     event.preventDefault()
            //     event.preventDefault()
            //     console.log('ok');
            // }

            // lifoo[0].addEventListener("click", function(){ alert("Hello World!"); });

            // var dupa = lifoo[0].getComputedStyle(
            //     document.querySelector('.uk-parent'), ':before').getPropertyValue('color');
            // function getClosest(el, tag) {
            //     // this is necessary since nodeName is always in upper case
            //     tag = tag.toUpperCase();
            //     do {
            //         if (el.nodeName === tag) {
            //             // tag name is found! let's return it. :)
            //             return el;
            //         }
            //     } while (el = el.parentNode);
            //
            //     // not found :(
            //     return null;
            // }



            // for (var i = 0 ; i < dupa.length; i++) {
            //     dupa[i].addEventListener('click' , function() {
            //         event.preventDefault();
            //
            //        console.log(dupa[i].closest('.uk-nav-sub'));
            //     }) ;
            //
            //
            // };
        </script>

    {% endblock %}
{% endblock %}
</body>
</html>